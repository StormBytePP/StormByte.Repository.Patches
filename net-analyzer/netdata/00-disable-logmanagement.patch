From f605cafc75f0e48aefbb21720ee1a76e25cc83ec Mon Sep 17 00:00:00 2001
From: "Austin S. Hemmelgarn" <austin@netdata.cloud>
Date: Mon, 24 Jun 2024 07:35:07 -0400
Subject: [PATCH] Explicitly disable logsmanagement plugin on known-broken
 environments.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Also, just disable it by default, because we donâ€™t really support it.
---
 CMakeLists.txt | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index f37cbd18af5c15..a26ff63b9a42fe 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -96,13 +96,22 @@ if("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
         find_library(IOKIT IOKit)
         find_library(FOUNDATION Foundation)
         message(INFO " Compiling for MacOS... ")
+        set(ALLOW_PLATFORM_SENSITIVE_OPTIONS TRUE)
 elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "FreeBSD")
         set(OS_FREEBSD True)
         message(INFO " Compiling for FreeBSD... ")
+        set(ALLOW_PLATFORM_SENSITIVE_OPTIONS TRUE)
 elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
         set(OS_LINUX True)
         add_definitions(-D_GNU_SOURCE)
         message(INFO " Compiling for Linux... ")
+        include(NetdataUtil)
+        netdata_identify_libc(LIBC_IMPLEMENTATION)
+        if(CMAKE_C_COMPILER_ID STREQUAL "Clang" AND LIBC_IMPLEMENTATION STREQUAL "musl")
+            set(ALLOW_PLATFORM_SENSITIVE_OPTIONS FALSE)
+        else()
+            set(ALLOW_PLATFORM_SENSITIVE_OPTIONS TRUE)
+        endif()
 elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "CYGWIN" OR "${CMAKE_SYSTEM_NAME}" STREQUAL "MSYS" OR "${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
         set(OS_WINDOWS True)
         add_definitions(-D_GNU_SOURCE)
@@ -122,6 +131,7 @@ elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "CYGWIN" OR "${CMAKE_SYSTEM_NAME}" STREQU
         endif()
 
         message(INFO " Compiling for Windows (${CMAKE_SYSTEM_NAME}, MSYSTEM=$ENV{MSYSTEM})... ")
+        set(ALLOW_PLATFORM_SENSITIVE_OPTIONS TRUE)
 else()
         message(FATAL_ERROR "Unknown/unsupported platform: ${CMAKE_SYSTEM_NAME} (Supported platforms: FreeBSD, Linux, macOS, Windows)")
 endif()
@@ -151,7 +161,7 @@ cmake_dependent_option(ENABLE_PLUGIN_EBPF "Enable Linux eBPF metric collection"
 cmake_dependent_option(ENABLE_LEGACY_EBPF_PROGRAMS "Enable eBPF programs for kernels without BTF support" True "ENABLE_PLUGIN_EBPF" False)
 mark_as_advanced(ENABLE_LEGACY_EBPF_PROGRAMS)
 cmake_dependent_option(ENABLE_PLUGIN_LOCAL_LISTENERS "Enable local listening socket tracking (including service auto-discovery support)" ${DEFAULT_FEATURE_STATE} "OS_LINUX" False)
-cmake_dependent_option(ENABLE_PLUGIN_LOGS_MANAGEMENT "Enable log collection and monitoring based on Fluent Bit" ${DEFAULT_FEATURE_STATE} "OS_LINUX" False)
+cmake_dependent_option(ENABLE_PLUGIN_LOGS_MANAGEMENT "Enable log collection and monitoring based on Fluent Bit" False "OS_LINUX AND ALLOW_PLATFORM_SENSITIVE_FEATURES" False)
 cmake_dependent_option(ENABLE_PLUGIN_NETWORK_VIEWER "Enable network viewer functionality" ${DEFAULT_FEATURE_STATE} "OS_LINUX" False)
 cmake_dependent_option(ENABLE_PLUGIN_NFACCT "Enable Linux NFACCT metric collection" ${DEFAULT_FEATURE_STATE} "OS_LINUX" False)
 cmake_dependent_option(ENABLE_PLUGIN_PERF "Enable Linux performance counter monitoring" ${DEFAULT_FEATURE_STATE} "OS_LINUX" False)
