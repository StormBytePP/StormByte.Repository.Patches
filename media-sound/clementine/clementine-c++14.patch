--- a/gst/moodbar/CMakeLists.txt	2023-10-15 03:53:57.634673896 +0200
+++ b/gst/moodbar/CMakeLists.txt	2023-10-15 03:54:10.273753069 +0200
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.0.0)
 
 set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Woverloaded-virtual -Wall --std=c++0x")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Woverloaded-virtual -Wall --std=c++14")
 
 include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})
 
--- a/ext/libclementine-tagreader/CMakeLists.txt	2023-10-15 03:54:55.767038023 +0200
+++ b/ext/libclementine-tagreader/CMakeLists.txt	2023-10-15 03:55:06.947108053 +0200
@@ -3,7 +3,7 @@
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 include_directories(${CMAKE_SOURCE_DIR}/ext/libclementine-common)
 
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++0x")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++14")
 
 set(MESSAGES
   tagreadermessages.proto
--- a/ext/libclementine-remote/CMakeLists.txt	2023-10-15 03:56:03.098459857 +0200
+++ b/ext/libclementine-remote/CMakeLists.txt	2023-10-15 03:56:17.455550132 +0200
@@ -1,6 +1,6 @@
 include_directories(${PROTOBUF_INCLUDE_DIRS})
 
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++0x")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++14")
 
 set(MESSAGES
   remotecontrolmessages.proto
--- a/3rdparty/qtsingleapplication/CMakeLists.txt	2023-10-15 03:58:59.740563693 +0200
+++ b/3rdparty/qtsingleapplication/CMakeLists.txt	2023-10-15 03:59:15.020657692 +0200
@@ -1,5 +1,5 @@
 cmake_minimum_required(VERSION 3.0.0)
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++0x")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=c++14")
 
 set(SINGLEAPP-SOURCES
     qtlocalpeer.cpp
--- a/CMakeLists.txt	2023-10-15 04:07:44.290566727 +0200
+++ b/CMakeLists.txt	2023-10-15 04:08:01.761677599 +0200
@@ -3,6 +3,10 @@
 cmake_minimum_required(VERSION 3.0.0)
 cmake_policy(SET CMP0053 OLD)
 
+set(CMAKE_CXX_STANDARD 14)
+set(CMAKE_CXX_STANDARD_REQUIRED ON)
+set(CMAKE_CXX_EXTENSIONS OFF)
+
 include(CheckCXXCompilerFlag)
 include(FindPkgConfig)
 include(cmake/C++11Compat.cmake)
