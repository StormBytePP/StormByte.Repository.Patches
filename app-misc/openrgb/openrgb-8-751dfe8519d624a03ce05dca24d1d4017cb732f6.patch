From 751dfe8519d624a03ce05dca24d1d4017cb732f6 Mon Sep 17 00:00:00 2001
From: Geoffrey Mon <geofbot@gmail.com>
Date: Wed, 24 May 2023 22:41:34 -0500
Subject: [PATCH] Fury: safer probe for SPD addresses

---
 .../KingstonFuryDRAMControllerDetect.cpp      | 27 ++++++++++++-------
 1 file changed, 17 insertions(+), 10 deletions(-)

diff --git a/Controllers/KingstonFuryDRAMController/KingstonFuryDRAMControllerDetect.cpp b/Controllers/KingstonFuryDRAMController/KingstonFuryDRAMControllerDetect.cpp
index 5579fb3a0..303c25fcd 100644
--- a/Controllers/KingstonFuryDRAMController/KingstonFuryDRAMControllerDetect.cpp
+++ b/Controllers/KingstonFuryDRAMController/KingstonFuryDRAMControllerDetect.cpp
@@ -29,19 +29,26 @@ bool TestForFuryDDR5(i2c_smbus_interface* bus, int slot_index)
         return false;
     }
 
-    // TODO probing 0x6_ address seems to crash the smbus controller when in dynamic mode
-    for (int i = 0; i < 2; i++)
+    addr = base_4x_addr + slot_index;
+    res = bus->i2c_smbus_write_quick(addr, I2C_SMBUS_WRITE);
+    LOG_DEBUG("[%s] Probing address %02X, res=%02X",
+              FURY_CONTROLLER_NAME, addr, res);
+    if (res < 0)
     {
-        addr = test_addrs[i] + slot_index;
-        res = bus->i2c_smbus_write_quick(addr, I2C_SMBUS_WRITE);
-        LOG_DEBUG("[%s] Writing at address %02X, res=%02X",
-                  FURY_CONTROLLER_NAME, addr, res);
-        if (res < 0)
-        {
-            return false;
-        }
+        return false;
     }
 
+    // i2cdetect by default uses i2c_smbus_read_byte for SPD address range
+    addr = base_5x_addr + slot_index;
+    res = bus->i2c_smbus_read_byte(addr);
+    LOG_DEBUG("[%s] Probing address %02X, res=%02X",
+              FURY_CONTROLLER_NAME, addr, res);
+    if (res < 0)
+    {
+        return false;
+    }
+
+    // TODO probing 0x6_ address seems to crash the smbus controller when in dynamic mode
 
     bool passed = true;
     int slot_6x_addr = base_6x_addr + slot_index;
-- 
GitLab

