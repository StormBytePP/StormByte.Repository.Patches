diff --git a/src/trace.h b/src/trace.h
index 2d70079..858b1df 100644
--- a/src/trace.h
+++ b/src/trace.h
@@ -100,7 +100,7 @@ class AutoTrace
         }
         else
         {
-          g_tracer->log(m_loc,spdlog::level::trace,"> "+fmt,std::forward<Args>(args)...);
+          g_tracer->log(m_loc,spdlog::level::trace,fmt::runtime("> "+fmt),std::forward<Args>(args)...);
         }
       }
     }
@@ -126,7 +126,7 @@ class AutoTrace
     {
       if (g_tracer)
       {
-        g_tracer->log(loc,spdlog::level::trace,": "+fmt,std::forward<Args>(args)...);
+        g_tracer->log(loc,spdlog::level::trace,fmt::runtime(": "+fmt),std::forward<Args>(args)...);
       }
     }
     template<typename... Args>
@@ -134,7 +134,7 @@ class AutoTrace
                  const std::string &msg,Args&&...args)
     {
       m_loc = loc;
-      m_exitMessage = fmt::format(msg,std::forward<Args>(args)...);
+      m_exitMessage = fmt::format(fmt::runtime(msg),std::forward<Args>(args)...);
     }
   private:
    spdlog::source_loc m_loc;
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7a5a205..0982489 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -82,7 +82,7 @@ if (build_wizard)
 endif()
 
 # use C++17 standard for compiling
-set(CMAKE_CXX_STANDARD 17)
+set(CMAKE_CXX_STANDARD 20)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 set(CMAKE_CXX_EXTENSIONS ON)
 
@@ -177,7 +177,7 @@ if (CMAKE_SYSTEM_NAME MATCHES "Windows")
 endif()
 
 # needed for JavaCC
-set(JAVA_CC_EXTRA_FLAGS "-DJAVACC_CHAR_TYPE=\"unsigned char\"")
+set(JAVA_CC_EXTRA_FLAGS "-DJAVACC_CHAR_TYPE=\"char8_t\"")
 set(CMAKE_CXX_FLAGS       "${CMAKE_CXX_FLAGS}       ${JAVA_CC_EXTRA_FLAGS}")
 set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${JAVA_CC_EXTRA_FLAGS}")
 
